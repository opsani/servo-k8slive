apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: opsani-servo
rules:
- apiGroups: [ apps, extensions ]
  resources: [ deployments ]
  verbs: [ get, list, watch, create, update, patch, delete ]
- apiGroups: [ '' ]
  resources: [ pods ]
  verbs: [ get, list , watch, create, update, patch, delete ]
- apiGroups: [ apps ]
  resources: [ replicasets ]
  verbs: [ get, list ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: opsani-servo-rw-resources
roleRef:
  kind: Role
  name: opsani-servo
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: opsani-servo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opsani-servo-config
data:
  config.yaml: |
    k8s:
      adjust_on: data["control"]["userdata"]["deploy_to"] == "mainline"
      namespace: app2
      application:
        components:
          web-main/main:
            settings:
              replicas:
                min: 1
                max: 3
                pinned: True
              cpu:
                min: 0.125
                max: 1
                step: 0.125
                pinned: True
              mem:
                min: 0.125
                max: 1
                step: 0.125
                pinned: True
            env:
              COMMIT_DELAY:
                type: range
                min: 1
                max: 100
                step: 1
                default: 20
                pinned: True
    # k8slive:
    #   settlement: 130
    prom:
      prometheus_endpoint: http://prometheus.opsani-monitoring.svc:9090
      metrics:
        main_request_rate:
          query: sum(rate(envoy_cluster_upstream_rq_total{opsani_role="",app="web",role="main"}[1m]))
          unit: rpm
        canary_request_rate:
          query: sum(rate(envoy_cluster_upstream_rq_total{opsani_role="tuning",app="web",role="main"}[1m]))
          unit: rpm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opsani-servo
  labels:
    comp: opsani-servo
    optune.ai/exclude: '1'
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      comp: opsani-servo
  template:
    metadata:
      labels:
        comp: opsani-servo
    spec:
      serviceAccountName: opsani-servo
      volumes:
      - name: auth
        secret:
          secretName: opsani-servo-auth
      - name: config
        configMap:
          name: opsani-servo-config
      containers:
      - name: main
        volumeMounts:
        - name: auth
          mountPath: /etc/opsani-servo-auth
          readOnly: true
        - name: config
          mountPath: /servo/config.yaml
          subPath: config.yaml
          readOnly: true
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 125m
            memory: 128Mi
        image: 959612087337.dkr.ecr.us-east-2.amazonaws.com/servo-k8slive:latest
        args:
        - app2
        - --auth-token=/etc/opsani-servo-auth/token
        - --verbose
        env:
        - name: OPTUNE_ACCOUNT
          value: kumul.us
        - name: OPTUNE_PERF
          value: canary_request_rate
        - name: POD_NAME
          valueFrom:
              fieldRef:
                fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
